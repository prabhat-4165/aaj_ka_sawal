// 1922. Count Good Numbers

class Solution {
public:
#define mod 1000000007
    long long power (long long x, long long y)
    {
      if (y==0) return 1;
      long long ans = power(x,y/2);
      ans *= ans;
      ans %= mod;
      if (y&1) ans *= x;
      ans %= mod;

      return ans;
    }

    int countGoodNumbers(long long n) {
        long long odd = n/2;
        long long even = n/2 + n%2;
        return ((power(5,even)%mod)*(power(4,odd)%mod))%mod;
    }
};

// 219. Contains Duplicate II

class Solution {
public:
    bool containsNearbyDuplicate(vector<int>& nums, int k) {
      unordered_map<int,int>mp;
      for (int i=0;i<nums.size();i++){
          if (mp.count(nums[i]))
             if ( abs(i-mp[nums[i]]) <= k )
             return true;

             mp[nums[i]] = i;
      }
         return false;
    }
};

