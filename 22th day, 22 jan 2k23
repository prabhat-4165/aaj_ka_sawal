// isomorphic string, leetcode question 
class Solution {
public:
    bool isIsomorphic(string s, string t) {
           unordered_map <char,char> mp,mp2;

           for (int i=0;i<s.length();i++)
           {   
              if ( mp[s[i]] && (mp[s[i]] != t[i] ) )
                    return false;
                   if ( mp2[t[i]] && (mp2[t[i]] != s[i] ) )
                    return false;  
               mp[s[i]]=t[i];
               mp2[t[i]]=s[i];
           }  
           return true;    
    }
};

// containes duplicate, leetcode question
class Solution {
public:
    bool containsDuplicate(vector<int>& nums) {
        sort(nums.begin(),nums.end());
        bool flag = false;
        for (int i=0;i<nums.size()-1;i++){
            if (nums[i]==nums[i+1]){
                flag = true;
                break;
            }
        }
        return flag;
    }
};
