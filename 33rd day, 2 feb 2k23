// 729. my calander leetcode 1

class MyCalendar {
public:
    vector<pair<int,int>>v;
    MyCalendar() {
        
    }
    
    bool book(int start, int end) {
          for (auto x: v){
        if (x.first <end && start<x.second){
            return false;
        }
          }
       v.push_back({start,end});
         return true;
    }
};

/**
 * Your MyCalendar object will be instantiated and called as such:
 * MyCalendar* obj = new MyCalendar();
 * bool param_1 = obj->book(start,end);
 */
 
 // 81. search in rotated sorted array || 
 
 class Solution {
public:
    bool search(vector<int>& nums, int target) {
      int s = 0;
      int n = nums.size();
      int e = n-1;
      if (n==1 && nums[0] == target)
           return true;
           else if (n==1 && nums[0] != target )
              return false;
        
      while (s<=e)
      {
          int mid = s + (e-s)/2;
          if (nums[mid]==target)
              return true;

              if (nums[s]==nums[mid] && nums[e]==nums[mid])
                   {
                       s++;
                       e--;
                   }
             else if (nums[s]<=nums[mid])
             {
                 if (nums[s]<=target && nums[mid]>target)
                  e = mid-1;
                  else 
                  s = mid+1;
             }
             else {
                 if (nums[e]>=target && nums[mid]<target)
                     s= mid+1;
                     else
                     e =mid-1;
             }
      }
      return false;   
    }
};

