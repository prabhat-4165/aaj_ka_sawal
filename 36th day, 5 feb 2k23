// Search insert position of K in a sorted array 

class Solution{
    public:
    int searchInsertK(vector<int>arr, int n, int k)
    {
        int s = 0;
        int e = n-1;
        int mid = s + (e-s)/2;
        while (s<=e)
        {
            if(arr[mid] == k)
                return mid;
                else if (arr[mid] < k)
                  s = mid +1;
                  else 
                    e = mid-1;
                    
              mid = s + (e-s)/2;      
        }
        return mid;
    }
};

//K-th element of two sorted Arrays

int kthElement(int arr1[], int arr2[], int n, int m, int k)
    {
        int i = n-1;
        int j = 0;
        while (i>=0 && j<m)
        {
            if (arr1[i] > arr2[j])
            {  
                swap(arr1[i], arr2[j]);
              i--;
              j++;
            }
               else 
                 break;
        }
          sort(arr1,arr1+n);
          sort(arr2,arr2+m);
          
          if (k<=n)
             return arr1[k-1];
             else 
             return arr2[k-n-1];
    }
