// 153. Find Minimum in Rotated Sorted Array

class Solution {
public:
    int findMin(vector<int>& nums) {
        int s = 0;
        int e = nums.size()-1;
        int n = nums.size();
        int mid = s + (e-s)/2;
        if (nums[0] < nums[n-1])
             return nums[0];       
        int ans= INT_MAX;
        while (s <= e)
        {
            if ( mid +1 <= n-1 &&  nums[mid] < nums[mid+1] && nums[mid] < nums[mid-1] )
            {
                ans = nums[mid];
                break;
            }    

                 if (nums[mid] >= nums[0])
                     s = mid + 1;
                    else 
                        e = mid - 1;

                 mid = s + (e-s)/2;        
        }      
             if (ans != INT_MAX)
           return ans;
             else 
             return nums[n-1];
    }
};

// 172. Factorial Trailing Zeroes

class Solution {
public:
    int trailingZeroes(int n) {
     return (n/5 + n/25 + n/125 + n/625 + n/3125 );
    }
};

